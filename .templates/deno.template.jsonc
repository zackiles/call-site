{
  // Schema deno.jsonc: @https://github.com/denoland/deno/blob/main/cli/schemas/config-file.v1.json
  "name": "{PACKAGE_NAME}",
  "version": "{PACKAGE_VERSION}",
  "description": "A modern Deno 2 library starter kit",
  "license": "MIT",
  "author": "{PACKAGE_AUTHOR_NAME} <{PACKAGE_AUTHOR_EMAIL}>",
  "homepage": "https://github.com/zackiles/{PROJECT_NAME}",
  "repository": {
    "type": "git",
    "url": "https://github.com/zackiles/{PROJECT_NAME}.git"
  },
  "tasks": {
    "server": "deno run --allow-env --allow-net scripts/server.ts",
    "server:dev": "deno run --allow-all --watch scripts/server.ts",
    "server:telemetry": "OTEL_DENO=true deno run --allow-all scripts/server.ts",
    "cli": "deno run --allow-env --allow-read scripts/cli.ts",
    "cli:dev": "deno run --allow-all --watch scripts/cli.ts",
    "cli:telemetry": "OTEL_DENO=true deno run --allow-all scripts/cli.ts",
    "test": "deno test --allow-all",
    "test:telemetry": "OTEL_DENO=true deno test --allow-all",
    "fmt": "deno fmt",
    "lint": "deno lint"
  },
  // Import maps. Prefer import "@scope/package" syntax in code.
  "imports": {
    "@opentelemetry/api": "npm:@opentelemetry/api@1",
    "@opentelemetry/api-logs": "npm:@opentelemetry/api-logs@0",
    "@opentelemetry/sdk-logs": "npm:@opentelemetry/sdk-logs@0",
    "@opentelemetry/sdk-trace-base": "npm:@opentelemetry/sdk-trace-base@1",
    "@opentelemetry/resources": "npm:@opentelemetry/resources@1",
    "@opentelemetry/semantic-conventions": "npm:@opentelemetry/semantic-conventions@1",
    "@std/assert": "jsr:@std/assert@1",
    "@std/cli": "jsr:@std/cli@1",
    "@std/jsonc": "jsr:@std/jsonc@1",
    "@std/net": "jsr:@std/net@1",
    "@std/testing": "jsr:@std/testing@1"
  },
  "unstable": [
    "kv",
    "net",
    "http",
    "fs",
    "ffi",
    "cron",
    "temporal",
    "webgpu",
    "unsafe-proto",
    "otel",
    "webgpu"
  ],
  "lock": true,
  "nodeModulesDir": "none",
  "fmt": {
    "lineWidth": 80,
    "semiColons": false,
    "useTabs": false,
    "indentWidth": 2,
    "singleQuote": true,
    "proseWrap": "preserve",
    "include": [
      "src/",
      "test/",
      "scripts/",
      "README.md"
    ],
    "exclude": [
      "!fixtures"
    ]
  },
  // Schema for lint rules: @https://github.com/denoland/deno/blob/main/cli/schemas/lint-rules.v1.json
  "lint": {
    "enabled": true,
    "rules": {
      // Possible tags: "fresh", "jsr", "jsx", "react", "recommended"
      "tags": [
        "recommended"
      ],
      "exclude": [
        // LLMs don't play well with this rule.
        "no-explicit-any"
      ],
    },
    "include": [
      "src/",
      "test/",
      "scripts/"
    ],
    "exclude": [
      "!fixtures"
    ],
    "report": "pretty"
  },
  "test": {
    "include": [
      "test/**/*.ts"
    ]
  },
  // See Configuring Typescript in Deno: @https://docs.deno.com/runtime/fundamentals/configuration/
  "compilerOptions": {
    "strict": true,
    "exactOptionalPropertyTypes": true,
    "lib": [
      "esnext",
      "deno.window",
      "deno.ns",
      "deno.unstable"
    ]
  },
  // See jsr publishing: @https://docs.deno.com/runtime/reference/cli/publish/
  "publish": {
    "include": [
      "src/**/*.ts",
      "README.md",
      "LICENSE"
    ],
    "exclude": [
      "**/*.test.ts",
      "**/__tests__/**",
      "test/**",
      "fixtures/**",
      "scripts/**"
    ]
  },
  // The main entry point for the library to be published
  "exports": {
    ".": "./src/mod.ts"
  }
}
